{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UA0B/B,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,G,OAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAjCPN,EAAKC,KAAKa,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAMC,EAAO,GAEb,IAAIC,SAASlB,EAAKC,MAAMkB,SAAQ,SAACC,EAAOC,G,OAAUJ,EAAKI,GAAQD,C,IAI/D,IAFA,IAAIE,EAAeC,OAAON,EAAKX,OAEtBkB,EAAI,EAAGA,GAAKD,OAAON,EAAKQ,QAASD,GAAK,EAC7CpB,EAAcoB,EAAGF,GACdI,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBR,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBR,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAG9DgB,GAAgBC,OAAON,EAAKgB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const data = {};\n\n  new FormData(refs.form).forEach((value, name) => (data[name] = value));\n\n  let delayCounter = Number(data.delay);\n\n  for (let i = 1; i <= Number(data.amount); i += 1) {\n    createPromise(i, delayCounter)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayCounter += Number(data.step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) =>\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  );\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","data","FormData","forEach","value","name","delayCounter","Number","i","amount","then","param","Notify","success","concat","catch","failure","step"],"version":3,"file":"03-promises.34406996.js.map"}